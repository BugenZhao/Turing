import TuringLib

enum Symbol {
    case ğŸ‘‰, ğŸ‘ˆ
    case zero, one
}

enum State {
    case start, halt
    case moving
}

let machine = TuringMachine<State, Symbol>(tapeCount: 1, initialState: .start)

let instructions: [Instruction<State, Symbol>] = [
    Instruction(.start, [.ğŸ‘‰], .moving, [.ğŸ‘‰], [.R]),
    Instruction(.moving, [.one], .moving, [.zero], [.R]),
    Instruction(.moving, [.zero], .moving, [.one], [.R]),
    Instruction(.moving, [.ğŸ‘ˆ], .halt, [.ğŸ‘ˆ], [.R]),
]

machine.tapes[0].tape = [.ğŸ‘‰, .zero, .one, .zero, .one, .zero, .ğŸ‘ˆ]

try! machine.addInstruction(from: instructions)

machine.run()
